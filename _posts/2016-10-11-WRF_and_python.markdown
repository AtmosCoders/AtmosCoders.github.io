---
layout: post
title: WRF Utilities and Plotting tools in Python
tags: python wrf matplotlib
---

## Summary of meeting
In this meeting we had a chat about some modules and scripts available for WRF users. (The Weather Research and Forecasting model). WRF can generate output in a number of formats, most typically used being netCDF (.nc) files. Traditionally, people have used the NCL scripting language to plot this data (or maybe IDL for the true masochists...). 

A lot of these 'modules' cannot be installed in the usual ways (i.e. with your linux package manager, or `pip`, as they only contain a handful of files, so they are usually just downloaded and placed into your home folder or another directory somewhere.

# WRF plotting

### PyWRFplot
A nice bunch of scripts based on matplotlib for plotting some of the common plots typically generated by WRF users, e.g. Skew-T diagrams, xz plots, tz plots, and others. There is some documentation in [the wiki here](https://code.google.com/archive/p/pywrfplot/wikis), I have forked the code to the [AtmosCoders GitHub page here](https://github.com/AtmosCoders/pywrfplot), where you can download it as a zip file, or `git clone` it if you are that way inclined.

### pyWRF
Confusingly named very similar to the above, and with very similar functionality. Not well documentted, but the example scripts provided in the [GitHub repository here](https://github.com/scaine1/pyWRF) should be enough to get you started. 

### WEM: The WRF ensemble manager
[(GitHub page here)](https://github.com/johnrobertlawson/WEM)

This is a much more developed Python packager, and has two main functions. 
1. A submodule called lazyWRF, which assists in the setting up and running of ensemble simulations, e.g. it will automate namelist generation if you are just changing one parameter for example, and helps to prepare your input data for ensemble analysis. 

2. A submodule called postWRF. This is similar to the above packages, and will produce a range of 
plots, diagrams, statistics, ensemble maps etc.

This pacakge certainly looks the most feature-rich of the lot. It was developed by a former summer student/intern at CAS.
